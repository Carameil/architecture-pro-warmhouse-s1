openapi: 3.0.3
info:
  title: Сервис телеметрии API
  description: Сбор и хранение временных рядов для системы «Умный дом»
  version: 1.0.0
  contact:
    name: Команда «Умный дом»
    email: dev@warmhouse.com

servers:
  - url: http://localhost:8084
    description: Сервер для разработки

security:
  - BearerAuth: []

paths:
  /api/v1/telemetry:
    post:
      summary: Сохранить данные телеметрии
      description: Сохранить данные измерений от устройств
      tags:
        - Данные телеметрии
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelemetryRequest'
            example:
              deviceId: "550e8400-e29b-41d4-a716-446655440001"
              houseId: "a1b2c3d4-e5f6-7890-1234-567890abcdef"
              locationId: "f0e9d8c7-b6a5-4321-fedc-ba9876543210"
              measurementType: "temperature"
              value: 23.5
              unit: "celsius"
              quality: "good"
              timestamp: "2024-12-20T15:30:00Z"
              tags: {"sensor_type": "digital", "firmware": "v1.2"}
              metadata: {"correlation_id": "corr-12345"}
      responses:
        '201':
          description: Данные телеметрии успешно сохранены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/telemetry/batch:
    post:
      summary: Сохранить пакет данных телеметрии
      description: Сохранить несколько измерений телеметрии в одном запросе
      tags:
        - Данные телеметрии
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TelemetryRequest'
            example:
              - deviceId: "550e8400-e29b-41d4-a716-446655440001"
                houseId: "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                locationId: "f0e9d8c7-b6a5-4321-fedc-ba9876543210"
                measurementType: "temperature"
                value: 23.5
                timestamp: "2024-12-20T15:30:00Z"
              - deviceId: "550e8400-e29b-41d4-a716-446655440001"
                houseId: "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                locationId: "f0e9d8c7-b6a5-4321-fedc-ba9876543210"
                measurementType: "humidity"
                value: 45.2
                unit: "percent"
                timestamp: "2024-12-20T15:30:05Z"
      responses:
        '201':
          description: Пакет данных телеметрии успешно сохранен
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/telemetry/devices/{deviceId}:
    get:
      summary: Получить данные телеметрии для устройства
      description: Получить исторические данные телеметрии для конкретного устройства с необязательным фильтром по периоду
      tags:
        - Данные телеметрии
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: period
          in: query
          description: Временной период для запроса (например, 24h, 7d)
          schema:
            type: string
            pattern: "^[0-9]+[hdm]$"
          example: "24h"
      responses:
        '200':
          description: Данные телеметрии успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TelemetryResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/telemetry/statistics:
    get:
      summary: Получить статистику телеметрии
      description: Получить агрегированную статистику телеметрии
      tags:
        - Статистика
      parameters:
        - name: deviceId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: measurementType
          in: query
          required: true
          schema:
            type: string
          example: "temperature"
        - name: period
          in: query
          description: Временной период для запроса (например, 24h, 7d, 30m)
          schema:
            type: string
            pattern: "^[0-9]+[hdm]$"
            default: "24h"
      responses:
        '200':
          description: Статистика успешно получена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelemetryStatistics'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
          
  /health:
    get:
      summary: Проверка состояния
      tags:
        - Health
      security: []
      responses:
        '200':
          description: Сервис в рабочем состоянии
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "UP"
                  influxdb:
                    type: string
                    example: "UP"
                  redis:
                    type: string
                    example: "UP"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    TelemetryRequest:
      type: object
      description: Запрос на отправку данных телеметрии (соответствует TelemetryRequest.java)
      required:
        - deviceId
        - houseId
        - locationId
        - measurementType
        - value
      properties:
        deviceId:
          type: string
          format: uuid
        houseId:
          type: string
          format: uuid
        locationId:
          type: string
          format: uuid
        measurementType:
          type: string
        value:
          type: number
          format: double
        unit:
          type: string
        quality:
          type: string
        timestamp:
          type: string
          format: date-time
        tags:
          type: object
          additionalProperties:
            type: string
        metadata:
          type: object
          additionalProperties: true

    TelemetryResponse:
      type: object
      description: Ответ с данными телеметрии (соответствует TelemetryResponse.java)
      properties:
        measurementId:
          type: string
          format: uuid
        deviceId:
          type: string
          format: uuid
        houseId:
          type: string
          format: uuid
        locationId:
          type: string
          format: uuid
        measurementType:
          type: string
        value:
          type: number
          format: double
        unit:
          type: string
        quality:
          type: string
        timestamp:
          type: string
          format: date-time
        tags:
          type: object
          additionalProperties:
            type: string
        metadata:
          type: object
          additionalProperties: true

    TelemetryStatistics:
      type: object
      description: Статистика по данным телеметрии (соответствует TelemetryStatistics.java)
      properties:
        deviceId:
          type: string
          format: uuid
        measurementType:
          type: string
        period:
          type: string
        min:
          type: number
          format: double
        max:
          type: number
          format: double
        average:
          type: number
          format: double
        sum:
          type: number
          format: double
        count:
          type: integer
          format: int64
        first:
          type: number
          format: double
        last:
          type: number
          format: double

    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time

  responses:
    BadRequest:
      description: Некорректный запрос
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Не авторизован
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Ресурс не найден
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Внутренняя ошибка сервера
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

tags:
  - name: Данные телеметрии
    description: Сбор и запрос данных телеметрии
  - name: Статистика
    description: Агрегированная статистика телеметрии
  - name: Health
    description: Мониторинг состояния сервиса 