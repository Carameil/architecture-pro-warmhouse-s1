version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: ${POSTGRES_CONTAINER}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./smart_home/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: unless-stopped
    networks:
      - smarthome-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 3

  temperature-api:
    build:
      context: ./temperature-api
      dockerfile: Dockerfile
    container_name: ${TEMPERATURE_API_CONTAINER}
    working_dir: /var/www/html
    volumes:
      - ./temperature-api/app:/var/www/html
    environment:
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
    ports:
      - "${TEMPERATURE_API_PORT}:8081"
    restart: unless-stopped
    networks:
      - smarthome-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build:
      context: ./smart_home
      dockerfile: Dockerfile
    container_name: ${SMART_HOME_CONTAINER}
    depends_on:
      postgres:
        condition: service_healthy
      temperature-api:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - TEMPERATURE_API_URL=${TEMPERATURE_API_URL}
    ports:
      - "${SMART_HOME_PORT}:8080"
    restart: unless-stopped
    networks:
      - smarthome-network

volumes:
  postgres_data:

networks:
  smarthome-network:
    driver: bridge